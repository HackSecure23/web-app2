{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEWISID2\\\\Desktop\\\\seotube6\\\\src\\\\CompetitorAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  font-family: \"San Francisco\", Helvetica, \"Myriad Set\";\n  background-color: #f5f5f7;\n  color: #333;\n  max-width: 1100px;\n  margin: 50px auto;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);\n  text-align: center;\n`;\n_c = Container;\nconst Input = styled.input`\n  width: 80%;\n  padding: 12px;\n  margin: 15px 0;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  font-size: 16px;\n  outline: none;\n`;\n_c2 = Input;\nconst Button = styled.button`\n  background-color: #007aff;\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  margin-top: 15px;\n  font-size: 18px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  &:hover {\n    background-color: #005ecb;\n    transform: scale(1.05);\n  }\n`;\n_c3 = Button;\nconst KeywordBox = styled.div`\n  background: white;\n  padding: 15px;\n  margin: 15px 0;\n  border-radius: 8px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  text-align: left;\n`;\n_c4 = KeywordBox;\nfunction CompetitorAnalysis() {\n  _s();\n  var _keywordAnalysis$sugg;\n  const [username, setUsername] = useState(\"\");\n  const [channelData, setChannelData] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [keywordAnalysis, setKeywordAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchKeywordAnalysis = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/videos\");\n      setKeywordAnalysis(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch keyword analysis.\");\n    }\n  };\n  const fetchVideos = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const videoResponse = await axios.post(\"http://localhost:5000/analyze\", {\n        username\n      });\n      if (videoResponse.data.error) throw new Error(videoResponse.data.error);\n      setChannelData(videoResponse.data.channelData);\n      setVideos(videoResponse.data.videos);\n      await fetchKeywordAnalysis();\n    } catch (err) {\n      setError(\"Failed to fetch data. Check the username and API.\");\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchKeywordAnalysis();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Competitor Video Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Enter Competitor's Channel Name\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchVideos,\n      children: \"Get Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), channelData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Channel: \", channelData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subscribers: \", channelData.subscriberCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(KeywordBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://www.youtube.com/watch?v=${video.videoId}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Views: \", video.views, \" | Likes: \", video.likes, \" | Comments: \", video.comments]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, video.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), keywordAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keyword Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(KeywordBox, {\n        children: [/*#__PURE__*/_jsxDEV(BarChart, {\n          width: 600,\n          height: 300,\n          data: keywordAnalysis.keywordFrequency,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"frequency\",\n            fill: \"#007aff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 600,\n          height: 300,\n          data: keywordAnalysis.sentimentScores,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"score\",\n            stroke: \"#ff3b30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TF-IDF Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(keywordAnalysis.tfidfScores || {}).map(([word, score]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${word}: ${score.toFixed(2)}`\n          }, word, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Suggested Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 16\n          }, this), \" \", keywordAnalysis.suggestedTitle || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Suggested Tags:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 16\n          }, this), \" \", ((_keywordAnalysis$sugg = keywordAnalysis.suggestedTags) === null || _keywordAnalysis$sugg === void 0 ? void 0 : _keywordAnalysis$sugg.join(\", \")) || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitorAnalysis, \"7cBZ3lVM0tqgJglaOPOKQRnm3Iw=\");\n_c5 = CompetitorAnalysis;\nexport default CompetitorAnalysis;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"KeywordBox\");\n$RefreshReg$(_c5, \"CompetitorAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","Container","div","_c","Input","input","_c2","Button","button","_c3","KeywordBox","_c4","CompetitorAnalysis","_s","_keywordAnalysis$sugg","username","setUsername","channelData","setChannelData","videos","setVideos","keywordAnalysis","setKeywordAnalysis","loading","setLoading","error","setError","fetchKeywordAnalysis","response","get","data","err","fetchVideos","videoResponse","post","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","title","subscriberCount","map","video","href","videoId","rel","views","likes","comments","width","height","keywordFrequency","strokeDasharray","dataKey","fill","sentimentScores","stroke","Object","entries","tfidfScores","word","score","toFixed","suggestedTitle","suggestedTags","join","_c5","$RefreshReg$"],"sources":["C:/Users/LEWISID2/Desktop/seotube6/src/CompetitorAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\r\n\r\nconst Container = styled.div`\r\n  font-family: \"San Francisco\", Helvetica, \"Myriad Set\";\r\n  background-color: #f5f5f7;\r\n  color: #333;\r\n  max-width: 1100px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 80%;\r\n  padding: 12px;\r\n  margin: 15px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  outline: none;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #007aff;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 20px;\r\n  margin-top: 15px;\r\n  font-size: 18px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    background-color: #005ecb;\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst KeywordBox = styled.div`\r\n  background: white;\r\n  padding: 15px;\r\n  margin: 15px 0;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: left;\r\n`;\r\n\r\nfunction CompetitorAnalysis() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [channelData, setChannelData] = useState(null);\r\n  const [videos, setVideos] = useState([]);\r\n  const [keywordAnalysis, setKeywordAnalysis] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchKeywordAnalysis = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/videos\");\r\n      setKeywordAnalysis(response.data);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch keyword analysis.\");\r\n    }\r\n  };\r\n\r\n  const fetchVideos = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const videoResponse = await axios.post(\"http://localhost:5000/analyze\", { username });\r\n      if (videoResponse.data.error) throw new Error(videoResponse.data.error);\r\n      setChannelData(videoResponse.data.channelData);\r\n      setVideos(videoResponse.data.videos);\r\n      await fetchKeywordAnalysis();\r\n    } catch (err) {\r\n      setError(\"Failed to fetch data. Check the username and API.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchKeywordAnalysis();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Competitor Video Analysis</h2>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Enter Competitor's Channel Name\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <Button onClick={fetchVideos}>Get Videos</Button>\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {channelData && (\r\n        <div>\r\n          <h3>Channel: {channelData.title}</h3>\r\n          <p>Subscribers: {channelData.subscriberCount}</p>\r\n        </div>\r\n      )}\r\n\r\n      <ul>\r\n        {videos.map((video) => (\r\n          <KeywordBox key={video.videoId}>\r\n            <a href={`https://www.youtube.com/watch?v=${video.videoId}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {video.title}\r\n            </a>\r\n            <p>Views: {video.views} | Likes: {video.likes} | Comments: {video.comments}</p>\r\n          </KeywordBox>\r\n        ))}\r\n      </ul>\r\n\r\n      {keywordAnalysis && (\r\n        <div>\r\n          <h3>Keyword Analysis</h3>\r\n          <KeywordBox>\r\n            <BarChart width={600} height={300} data={keywordAnalysis.keywordFrequency}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"keyword\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"frequency\" fill=\"#007aff\" />\r\n            </BarChart>\r\n\r\n            <LineChart width={600} height={300} data={keywordAnalysis.sentimentScores}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"video\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"score\" stroke=\"#ff3b30\" />\r\n            </LineChart>\r\n\r\n            <h3>TF-IDF Scores</h3>\r\n            <ul>\r\n              {Object.entries(keywordAnalysis.tfidfScores || {}).map(([word, score]) => (\r\n                <li key={word}>{`${word}: ${score.toFixed(2)}`}</li>\r\n              ))}\r\n            </ul>\r\n\r\n            <p><strong>Suggested Title:</strong> {keywordAnalysis.suggestedTitle || \"N/A\"}</p>\r\n            <p><strong>Suggested Tags:</strong> {keywordAnalysis.suggestedTags?.join(\", \") || \"N/A\"}</p>\r\n          </KeywordBox>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CompetitorAnalysis;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}