{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEWISID2\\\\Desktop\\\\seotube6\\\\src\\\\CompetitorAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  font-family: \"San Francisco\", Helvetica, \"Myriad Set\";\n  background-color: #f5f5f7;\n  color: #333;\n  max-width: 1100px;\n  margin: 50px auto;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);\n  text-align: center;\n`;\n_c = Container;\nconst ProgressBar = styled.div`\n  width: 100%;\n  background: #e0e0e0;\n  border-radius: 8px;\n  overflow: visible;\n  margin: 20px 0;\n\n  div {\n    height: 40px;\n    text-align: left;\n    margin-left: 0px;\n    padding-left: 30px;\n    line-height: 30px;\n    color: black;\n    font-size: 16px;\n    font-weight: bold;\n    border-radius: 8px;\n    white-space: pre-line;\n    overflow: visible;\n    text-overflow: ellipsis;\n  }\n`;\n_c2 = ProgressBar;\nfunction CompetitorAnalysis() {\n  _s();\n  var _keywordAnalysis$keyw, _keywordAnalysis$bigr, _keywordAnalysis$trig, _keywordAnalysis$sugg, _keywordAnalysis$sugg2;\n  const [username, setUsername] = useState(\"\");\n  const [channelData, setChannelData] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [keywordAnalysis, setKeywordAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchKeywordAnalysis = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/videos\");\n      setKeywordAnalysis(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch keyword analysis.\");\n    }\n  };\n  const fetchVideos = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const videoResponse = await axios.post(\"http://localhost:5000/analyze\", {\n        username\n      });\n      if (videoResponse.data.error) throw new Error(videoResponse.data.error);\n      setChannelData(videoResponse.data.channelData);\n      setVideos(videoResponse.data.videos);\n      setKeywordAnalysis(videoResponse.data.keywordAnalysis);\n    } catch (err) {\n      setError(\"Failed to fetch data. Check the username and API.\");\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchKeywordAnalysis();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Competitor Video Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Competitor's Channel Name\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchVideos,\n      children: \"Get Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), channelData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Channel: \", channelData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subscribers: \", channelData.subscriberCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://www.youtube.com/watch?v=${video.videoId}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Views: \", video.views, \" | Likes: \", video.likes, \" | Comments: \", video.comments]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, video.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), keywordAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Keyword Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Top Keywords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), (_keywordAnalysis$keyw = keywordAnalysis.keywords) === null || _keywordAnalysis$keyw === void 0 ? void 0 : _keywordAnalysis$keyw.map((keyword, index) => /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${Math.min((index + 1) * 10, 100)}%`,\n            background: \"#007aff\"\n          },\n          children: keyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Top Bigrams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), (_keywordAnalysis$bigr = keywordAnalysis.bigrams) === null || _keywordAnalysis$bigr === void 0 ? void 0 : _keywordAnalysis$bigr.map((bigram, index) => /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${Math.min((index + 1) * 10, 100)}%`,\n            background: \"#34c759\"\n          },\n          children: bigram\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Top Trigrams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), (_keywordAnalysis$trig = keywordAnalysis.trigrams) === null || _keywordAnalysis$trig === void 0 ? void 0 : _keywordAnalysis$trig.map((trigram, index) => /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${Math.min((index + 1) * 10, 100)}%`,\n            background: \"#ff3b30\"\n          },\n          children: trigram\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"TF-IDF Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), Object.entries(keywordAnalysis.tfidfScores || {}).map(([word, score], index) => /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${Math.min(score * 10, 100)}%`,\n            background: \"#ff9500\"\n          },\n          children: `${word}: ${score.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Suggested Keywords for Your Next Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), (_keywordAnalysis$sugg = keywordAnalysis.suggestedKeywords) === null || _keywordAnalysis$sugg === void 0 ? void 0 : _keywordAnalysis$sugg.map((keyword, index) => /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${Math.min((index + 1) * 10, 100)}%`,\n            background: \"#af52de\"\n          },\n          children: keyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggested Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }, this), \" \", keywordAnalysis.suggestedTitle || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Suggested Tags:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 14\n        }, this), \" \", ((_keywordAnalysis$sugg2 = keywordAnalysis.suggestedTags) === null || _keywordAnalysis$sugg2 === void 0 ? void 0 : _keywordAnalysis$sugg2.join(\", \")) || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(CompetitorAnalysis, \"7cBZ3lVM0tqgJglaOPOKQRnm3Iw=\");\n_c3 = CompetitorAnalysis;\nexport default CompetitorAnalysis;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ProgressBar\");\n$RefreshReg$(_c3, \"CompetitorAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","jsxDEV","_jsxDEV","Container","div","_c","ProgressBar","_c2","CompetitorAnalysis","_s","_keywordAnalysis$keyw","_keywordAnalysis$bigr","_keywordAnalysis$trig","_keywordAnalysis$sugg","_keywordAnalysis$sugg2","username","setUsername","channelData","setChannelData","videos","setVideos","keywordAnalysis","setKeywordAnalysis","loading","setLoading","error","setError","fetchKeywordAnalysis","response","get","data","err","fetchVideos","videoResponse","post","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","title","subscriberCount","map","video","href","videoId","rel","views","likes","comments","keywords","keyword","index","width","Math","min","background","bigrams","bigram","trigrams","trigram","Object","entries","tfidfScores","word","score","toFixed","suggestedKeywords","suggestedTitle","suggestedTags","join","_c3","$RefreshReg$"],"sources":["C:/Users/LEWISID2/Desktop/seotube6/src/CompetitorAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-family: \"San Francisco\", Helvetica, \"Myriad Set\";\r\n  background-color: #f5f5f7;\r\n  color: #333;\r\n  max-width: 1100px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  width: 100%;\r\n  background: #e0e0e0;\r\n  border-radius: 8px;\r\n  overflow: visible;\r\n  margin: 20px 0;\r\n\r\n  div {\r\n    height: 40px;\r\n    text-align: left;\r\n    margin-left: 0px;\r\n    padding-left: 30px;\r\n    line-height: 30px;\r\n    color: black;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    white-space: pre-line;\r\n    overflow: visible;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nfunction CompetitorAnalysis() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [channelData, setChannelData] = useState(null);\r\n  const [videos, setVideos] = useState([]);\r\n  const [keywordAnalysis, setKeywordAnalysis] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchKeywordAnalysis = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/videos\");\r\n      setKeywordAnalysis(response.data);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch keyword analysis.\");\r\n    }\r\n  };\r\n\r\n  const fetchVideos = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const videoResponse = await axios.post(\"http://localhost:5000/analyze\", { username });\r\n      if (videoResponse.data.error) throw new Error(videoResponse.data.error);\r\n      setChannelData(videoResponse.data.channelData);\r\n      setVideos(videoResponse.data.videos);\r\n      setKeywordAnalysis(videoResponse.data.keywordAnalysis);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch data. Check the username and API.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchKeywordAnalysis();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Competitor Video Analysis</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Competitor's Channel Name\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <button onClick={fetchVideos}>Get Videos</button>\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {channelData && (\r\n        <div>\r\n          <h3>Channel: {channelData.title}</h3>\r\n          <p>Subscribers: {channelData.subscriberCount}</p>\r\n        </div>\r\n      )}\r\n\r\n      <ul>\r\n        {videos.map((video) => (\r\n          <li key={video.videoId}>\r\n            <a href={`https://www.youtube.com/watch?v=${video.videoId}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {video.title}\r\n            </a>\r\n            <p>Views: {video.views} | Likes: {video.likes} | Comments: {video.comments}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {keywordAnalysis && (\r\n        <div>\r\n          <h3>Keyword Analysis</h3>\r\n\r\n          <h4>Top Keywords</h4>\r\n          {keywordAnalysis.keywords?.map((keyword, index) => (\r\n            <ProgressBar key={index}>\r\n              <div style={{ width: `${Math.min((index + 1) * 10, 100)}%`, background: \"#007aff\" }}>{keyword}</div>\r\n            </ProgressBar>\r\n          ))}\r\n\r\n          <h4>Top Bigrams</h4>\r\n          {keywordAnalysis.bigrams?.map((bigram, index) => (\r\n            <ProgressBar key={index}>\r\n              <div style={{ width: `${Math.min((index + 1) * 10, 100)}%`, background: \"#34c759\" }}>{bigram}</div>\r\n            </ProgressBar>\r\n          ))}\r\n\r\n          <h4>Top Trigrams</h4>\r\n          {keywordAnalysis.trigrams?.map((trigram, index) => (\r\n            <ProgressBar key={index}>\r\n              <div style={{ width: `${Math.min((index + 1) * 10, 100)}%`, background: \"#ff3b30\" }}>{trigram}</div>\r\n            </ProgressBar>\r\n          ))}\r\n\r\n          <h4>TF-IDF Scores</h4>\r\n          {Object.entries(keywordAnalysis.tfidfScores || {}).map(([word, score], index) => (\r\n            <ProgressBar key={index}>\r\n              <div style={{ width: `${Math.min(score * 10, 100)}%`, background: \"#ff9500\" }}>{`${word}: ${score.toFixed(2)}`}</div>\r\n            </ProgressBar>\r\n          ))}\r\n\r\n          <h4>Suggested Keywords for Your Next Video</h4>\r\n          {keywordAnalysis.suggestedKeywords?.map((keyword, index) => (\r\n            <ProgressBar key={index}>\r\n              <div style={{ width: `${Math.min((index + 1) * 10, 100)}%`, background: \"#af52de\" }}>{keyword}</div>\r\n            </ProgressBar>\r\n          ))}\r\n\r\n          <p><strong>Suggested Title:</strong> {keywordAnalysis.suggestedTitle || \"N/A\"}</p>\r\n          <p><strong>Suggested Tags:</strong> {keywordAnalysis.suggestedTags?.join(\", \") || \"N/A\"}</p>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CompetitorAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}